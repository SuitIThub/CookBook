
<!DOCTYPE html>
<html lang="de" style="background-color: #111827; color: #f9fafb;">
  <script>
    // Theme detection script (runs immediately to prevent flash)
    (function() {
      const theme = localStorage.getItem('theme') || 
        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      
      // Apply theme class immediately
      document.documentElement.classList.toggle('dark', theme === 'dark');
      document.documentElement.classList.add(theme);
      
      // Apply correct colors based on theme
      if (theme === 'dark') {
        document.documentElement.style.backgroundColor = '#111827'; // gray-900
        document.documentElement.style.color = '#f9fafb'; // gray-100
      } else {
        document.documentElement.style.backgroundColor = '#f9fafb'; // gray-50
        document.documentElement.style.color = '#111827'; // gray-900
      }
      
      // Ensure visibility is set
      document.documentElement.style.visibility = 'visible';
    })();
  </script>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Digitales Kochbuch fÃ¼r Rezepte und Einkaufslisten" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>CookBook</title>
    
    <!-- PWA Meta Tags -->
    <meta name="application-name" content="Kochbuch" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="Kochbuch" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="theme-color" content="#f97316" />
    
    <!-- PWA Links -->
    <link rel="manifest" href="/manifest.json" />
    <link rel="shortcut icon" href="/favicon.svg" />
    
    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" href="/icons/icon-152x152.svg" />
    <link rel="apple-touch-icon" sizes="152x152" href="/icons/icon-152x152.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/icon-192x192.svg" />
    
    <!-- Microsoft Tiles -->
    <meta name="msapplication-TileColor" content="#f97316" />
    <meta name="msapplication-TileImage" content="/icons/icon-144x144.svg" />
    <style>
      /* Prevent flash of unstyled content during theme initialization */
      html:not(.dark):not(.light) {
        visibility: hidden;
      }
      /* Ensure smooth transition once CSS loads */
      html {
        transition: background-color 0.2s ease, color 0.2s ease;
      }
      /* Remove inline styles once CSS loads */
      html.css-loaded {
        background-color: unset !important;
        color: unset !important;
      }
    </style>
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200">
    <main>
      <slot />
    </main>

    <script>
      // Theme toggle functionality
      function initializeTheme() {
        const themeToggle = document.getElementById('theme-toggle');

        function toggleTheme() {
          const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
          
          document.documentElement.classList.toggle('dark', newTheme === 'dark');
          document.documentElement.classList.remove(currentTheme);
          document.documentElement.classList.add(newTheme);
          
          localStorage.setItem('theme', newTheme);
        }

        themeToggle?.addEventListener('click', toggleTheme);
      }

      // Initialize theme toggle
      initializeTheme();

      // Mark CSS as loaded
      document.documentElement.classList.add('css-loaded');
    </script>
  </body>
</html> 