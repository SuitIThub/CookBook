---
export const prerender = false;
import Layout from '../layouts/Layout.astro';
import { db } from '../lib/database';
import type { Recipe } from '../types/recipe';
import RecipeListHeader from '../components/recipe_list/RecipeListHeader.astro';
import RecipeCard from '../components/recipe_list/RecipeCard.astro';
import EmptyState from '../components/recipe_list/EmptyState.astro';
import SearchBar from '../components/recipe_list/SearchBar.astro';

// Rezepte aus der Datenbank laden
let recipes: Recipe[] = [];
try {
  recipes = db.getAllRecipes();
} catch (error) {
  console.error('Error loading recipes from database:', error);
  recipes = [];
}

// Extract unique categories
const categories = Array.from(new Set(recipes.map(recipe => recipe.category).filter((category): category is string => category !== undefined && category !== null)));
---

<Layout title="Kochbuch - Alle Rezepte">
  <div class="space-y-6">
    <!-- Header -->
    <RecipeListHeader recipeCount={recipes.length} />

    <!-- Search and Filter -->
    <SearchBar categories={categories} />

    {recipes.length > 0 ? (
      <!-- Recipe Grid -->
      <div class="grid-responsive">
        {recipes.map((recipe) => (
          <RecipeCard recipe={recipe} />
        ))}
      </div>
    ) : (
      <!-- Empty State -->
      <EmptyState />
    )}
  </div>
  
  <script>
    // Handle individual recipe export buttons
    document.addEventListener('DOMContentLoaded', () => {
      // Export dropdown functionality for individual recipes
      const exportBtns = document.querySelectorAll('.export-recipe-btn');
      
      exportBtns.forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const menu = btn.parentElement?.querySelector('.export-menu');
          
          // Close all other menus
          document.querySelectorAll('.export-menu').forEach(m => {
            if (m !== menu) m.classList.add('hidden');
          });
          
          // Toggle current menu
          menu?.classList.toggle('hidden');
        });
      });
      
      // Close dropdowns when clicking outside
      document.addEventListener('click', () => {
        document.querySelectorAll('.export-menu').forEach(menu => {
          menu.classList.add('hidden');
        });
      });
      
      // Handle export clicks
      document.querySelectorAll('.export-json').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const recipeId = btn.getAttribute('data-recipe-id');
          window.location.href = `/api/recipe-export?id=${recipeId}&format=json`;
          btn.closest('.export-menu')?.classList.add('hidden');
        });
      });
      
      document.querySelectorAll('.export-rcb').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const recipeId = btn.getAttribute('data-recipe-id');
          window.location.href = `/api/recipe-export?id=${recipeId}&format=rcb`;
          btn.closest('.export-menu')?.classList.add('hidden');
        });
      });
    });
  </script>
</Layout>
