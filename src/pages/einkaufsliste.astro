---
import Layout from '../layouts/Layout.astro';
import { db } from '../lib/database';

// Einkaufslisten aus der Datenbank laden
let shoppingLists = [];
try {
  shoppingLists = db.getAllShoppingLists();
} catch (error) {
  console.error('Error loading shopping lists from database:', error);
  shoppingLists = [];
}

// Erste Einkaufsliste verwenden oder leere Liste erstellen
const shoppingList = shoppingLists.length > 0 ? shoppingLists[0] : {
  id: '',
  title: 'Keine Einkaufsliste vorhanden',
  items: [],
  createdAt: new Date(),
  updatedAt: new Date()
};

const checkedItems = shoppingList.items.filter(item => item.isChecked);
const uncheckedItems = shoppingList.items.filter(item => !item.isChecked);
---

<Layout title="Einkaufsliste - Kochbuch">
  <div class="max-w-4xl mx-auto">
    <!-- Header -->
    <div class="flex justify-between items-center mb-6">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Einkaufsliste</h1>
        <p class="text-gray-600 mt-1">
          {uncheckedItems.length} von {shoppingList.items.length} Artikeln offen
        </p>
      </div>
      <div class="flex space-x-3">
        <button id="add-item-btn" class="flex items-center space-x-2 px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-md text-sm font-medium transition-colors">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
          </svg>
          <span>Artikel hinzuf√ºgen</span>
        </button>
      </div>
    </div>

    <div class="grid md:grid-cols-2 gap-6">
      <!-- Unchecked Items -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="p-6">
          <h2 class="text-xl font-bold text-gray-900 mb-4">
            Noch zu kaufen ({uncheckedItems.length})
          </h2>
          
          <div class="space-y-2">
            {uncheckedItems.map((item) => (
              <div class="flex items-center space-x-3 p-3 rounded-md hover:bg-gray-50 transition-colors">
                <input 
                  type="checkbox" 
                  class="w-5 h-5 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500 focus:ring-2"
                />
                <div class="flex-1 min-w-0">
                  <div class="flex justify-between items-center">
                    <span class="font-medium text-gray-900">{item.ingredientName}</span>
                    <span class="text-sm text-gray-600 bg-gray-100 px-2 py-1 rounded">
                      {item.quantity.amount} {item.quantity.unit}
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Checked Items -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="p-6">
          <h2 class="text-xl font-bold text-gray-900 mb-4">
            Erledigt ({checkedItems.length})
          </h2>
          
          <div class="space-y-2">
            {checkedItems.map((item) => (
              <div class="flex items-center space-x-3 p-3 rounded-md bg-green-50 border border-green-200">
                <input 
                  type="checkbox" 
                  checked
                  class="w-5 h-5 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500 focus:ring-2"
                />
                <div class="flex-1 min-w-0">
                  <div class="flex justify-between items-center">
                    <span class="font-medium text-green-800 line-through">{item.ingredientName}</span>
                    <span class="text-sm text-green-700 bg-green-100 px-2 py-1 rounded">
                      {item.quantity.amount} {item.quantity.unit}
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout> 