---
import type { ShoppingList } from '../../types/recipe';

interface Props {
  shoppingList: ShoppingList;
}

const { shoppingList } = Astro.props;

const uncheckedItems = shoppingList.items.filter(item => !item.isChecked);
const totalItems = shoppingList.items.length;
const completedItems = totalItems - uncheckedItems.length;
---

<div class="card hover:shadow-lg transition-all duration-200">
  <div class="card-content">
    <div class="flex items-start justify-between mb-3">
      <div class="min-w-0 flex-1">
        <h2 class="heading-card text-lg font-semibold text-gray-900 dark:text-white mb-1 truncate">
          {shoppingList.title}
        </h2>
        {shoppingList.description && (
          <p class="text-sm text-muted line-clamp-2 mb-2">
            {shoppingList.description}
          </p>
        )}
      </div>
      <button class="delete-list-btn btn-icon text-gray-500 hover:text-red-500 dark:text-gray-400 dark:hover:text-red-400" 
              data-list-id={shoppingList.id}
              data-list-title={shoppingList.title}
              aria-label="Einkaufsliste löschen">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
        </svg>
      </button>
    </div>

    <div class="space-y-2 mb-4">
      <div class="flex items-center justify-between text-sm">
        <span class="text-muted">Artikel</span>
        <span class="font-medium text-gray-900 dark:text-white">
          {completedItems}/{totalItems}
        </span>
      </div>
      
      {totalItems > 0 && (
        <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
          <div class="bg-green-500 h-2 rounded-full transition-all duration-300" 
               style={`width: ${(completedItems / totalItems) * 100}%`}></div>
        </div>
      )}
      
      {shoppingList.recipes && shoppingList.recipes.length > 0 && (
        <div class="flex items-center space-x-1 text-xs text-blue-600 dark:text-blue-400">
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
          </svg>
          <span>{shoppingList.recipes.length} Rezept{shoppingList.recipes.length !== 1 ? 'e' : ''}</span>
        </div>
      )}
    </div>

    <div class="flex space-x-2">
      <a href={`/einkaufsliste/${shoppingList.id}`} 
         class="btn btn-primary flex-1 text-center">
        Öffnen
      </a>
      <a href={`/einkaufsliste/${shoppingList.id}/edit`} 
         class="btn btn-secondary" 
         title="Bearbeiten">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
        </svg>
      </a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('.delete-list-btn');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', async (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const listId = (e.currentTarget as HTMLElement).dataset.listId;
        const listTitle = (e.currentTarget as HTMLElement).dataset.listTitle;
        
        if (!listId || !listTitle) {
          console.error('Missing list ID or title');
          return;
        }

        const confirmed = await window.showDeleteConfirm(
          `Möchten Sie die Einkaufsliste "${listTitle}" wirklich löschen?`
        );

        if (confirmed) {
          try {
            const response = await fetch(`/api/shopping-lists?id=${listId}`, {
              method: 'DELETE'
            });

            if (response.ok) {
              // The server-sent events will handle the UI update
              window.showInfo('Einkaufsliste wurde gelöscht');
            } else {
              window.showWarning('Fehler beim Löschen der Einkaufsliste');
            }
          } catch (error) {
            console.error('Error deleting shopping list:', error);
            window.showWarning('Fehler beim Löschen der Einkaufsliste');
          }
        }
      });
    });
  });
</script> 